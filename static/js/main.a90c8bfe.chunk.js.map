{"version":3,"sources":["reducers/recipeReducer.js","contexts/RecipeContext.js","components/RecipeForm.js","components/RecipeDetails.js","components/RecipesList.js","App.js","index.js"],"names":["recipeReducer","state","action","type","title","recipe","ingredient","instructions","id","v4","filter","RecipeContext","createContext","RecipeContextProvider","children","useReducer","localData","localStorage","getItem","JSON","parse","recipes","dispatch","useEffect","setItem","stringify","Provider","value","Recipe","useContext","useState","setTitle","setIngredient","setInstructions","className","htmlFor","onChange","e","target","placeholder","onClick","preventDefault","map","element","i","key","j","RecipeDetails","el","console","log","RecipesList","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a90c8bfe.chunk.js","sourcesContent":["import { v4 } from \"uuid\";\r\n\r\nexport const recipeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    // case \"INCREMENT\":\r\n    //   return [\r\n    //     ...state,\r\n    //     {\r\n    //       input: state.ingredient + 1,\r\n    //       id: v4(),\r\n    //       value: Math.random() * 100,\r\n    //     },\r\n    //   ];\r\n    case \"ADD_RECIPE\":\r\n      return [\r\n        ...state,\r\n        {\r\n          title: action.recipe.title,\r\n          ingredient: action.recipe.ingredient,\r\n          instructions: action.recipe.instructions,\r\n          id: v4(),\r\n        },\r\n      ];\r\n    case \"REMOVE_RECIPE\":\r\n      return state.filter((recipe) => recipe.id !== action.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { recipeReducer } from \"../reducers/recipeReducer\";\r\n\r\n//const initialState = { recipes: [] };\r\nexport const RecipeContext = createContext();\r\n\r\nexport const RecipeContextProvider = ({ children }) => {\r\n  const [recipes, dispatch] = useReducer(recipeReducer, [], () => {\r\n    const localData = localStorage.getItem(\"recipes\");\r\n    return localData ? JSON.parse(localData) : [];\r\n  });\r\n  useEffect(() => {\r\n    localStorage.setItem(\"recipes\", JSON.stringify(recipes));\r\n  }, [recipes]);\r\n  return (\r\n    <RecipeContext.Provider value={{ recipes, dispatch }}>\r\n      {children}\r\n    </RecipeContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { RecipeContext } from \"../contexts/RecipeContext\";\r\nimport { v4 } from \"uuid\";\r\n//import { IngredientList } from \"./IngredientList\";\r\n\r\nexport const Recipe = () => {\r\n  const { dispatch } = useContext(RecipeContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  // const [input, setInput] = useState([]);\r\n  const [ingredient, setIngredient] = useState([\" \"]);\r\n  const [instructions, setInstructions] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setIngredient([...ingredient, { ingredient: \" \", id: v4() }]);\r\n    // dispatch({ type: \"INCREMENT\", recipe: { ingredient } });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({\r\n      type: \"ADD_RECIPE\",\r\n      recipe: { title, ingredient, instructions },\r\n    });\r\n    setTitle(\"\");\r\n    setIngredient([]);\r\n    setInstructions(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <h2>Recipe Book</h2>\r\n      <br />\r\n      <div className=\"title\">\r\n        <label htmlFor=\"title\">Name your new recipe</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Title...\"\r\n        />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <p className=\"add-ingredient\">Add Ingredient</p>\r\n\r\n        <button className=\"add\" onClick={handleClick}>\r\n          +\r\n        </button>\r\n        <ul className=\"ingredientlist\">\r\n          <p className=\"input\"></p>\r\n\r\n          {ingredient.map((element, i) => {\r\n            return (\r\n              <div key={i}>\r\n                {/* <label>Ingredient {i + 1}</label> */}\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"add ingredient\"\r\n                  onChange={(e) =>\r\n                    setIngredient(\r\n                      ingredient.map((value, j) => {\r\n                        if (i === j) {\r\n                          value = e.target.value;\r\n                        }\r\n                        return value;\r\n                      })\r\n                    )\r\n                  }\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* <IngredientList\r\n        className=\"input\"\r\n        onChange={(e) => setIngredient(e.target.value)}\r\n      /> */}\r\n      <br />\r\n      <div className=\"instructions\">\r\n        <p>Instructions</p>\r\n        <textarea\r\n          value={instructions}\r\n          onChange={(e) => setInstructions(e.target.value)}\r\n        />\r\n        <input\r\n          onClick={handleSubmit}\r\n          type=\"submit\"\r\n          value=\"Save Recipe\"\r\n          className=\"save\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { RecipeContext } from \"../contexts/RecipeContext\";\r\nimport \"./styles/RecipeDetails.styles.css\";\r\nimport { v4 } from \"uuid\";\r\nexport const RecipeDetails = ({ recipe }) => {\r\n  const { dispatch } = useContext(RecipeContext);\r\n  return (\r\n    <li className=\"recipe-details\">\r\n      <button\r\n        className=\"recipe-close\"\r\n        onClick={() => dispatch({ type: \"REMOVE_RECIPE\", id: recipe.id })}\r\n      >\r\n        &#10005;\r\n      </button>\r\n      <div>\r\n        <div className=\"recipe-title\">{recipe.title}</div>\r\n        <p className=\"ingredients-title\">\r\n          {\" \"}\r\n          Ingredients <br />\r\n        </p>\r\n        <ul>\r\n          {recipe.ingredient.map((el, i) => {\r\n            console.log(el);\r\n            return (\r\n              <li key={i} className=\"recipe-ingredient\">\r\n                {el}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n        {/* {console.log(recipe.ingredient)} */}\r\n        <p className=\"instructions-title\">Instructions</p>\r\n        <div className=\"recipe-instructions\">{recipe.instructions}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { RecipeContext } from \"../contexts/RecipeContext\";\r\nimport { RecipeDetails } from \"../components/RecipeDetails\";\r\nexport const RecipesList = () => {\r\n  const { recipes } = useContext(RecipeContext);\r\n  return recipes.length ? (\r\n    <div className=\"recipe-list\">\r\n      <ul>\r\n        {recipes.map((recipe) => {\r\n          return <RecipeDetails recipe={recipe} key={recipe.id} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No recipes added yet. </div>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport { Recipe } from \"./components/RecipeForm\";\nimport \"./App.css\";\n\nimport { RecipesList } from \"./components/RecipesList\";\nimport { RecipeContextProvider } from \"./contexts/RecipeContext\";\n//import { IngredientContextProvider } from \"./contexts/IngredientContext\";\n\nfunction App() {\n  return (\n    <div className=\"background\">\n      {\" \"}\n      <div className=\"container layer\">\n        <RecipeContextProvider>\n          {/* <IngredientContextProvider> */}\n          <Recipe />\n          <div className=\"recipes\"></div>\n          <RecipesList />\n          {/* </IngredientContextProvider> */}\n        </RecipeContextProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}